<!DOCTYPE html>
<html>
<head>
  <title>Multiple File Input with JSZip</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.5.0/css/bootstrap.min.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.7.1/jszip.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.5.0/js/bootstrap.bundle.min.js"></script>
  <script>
    $(document).ready(function() {
      // JavaScript code for generating the zip file
      // Assuming you have an array of file input elements with the class "fileInput"
      const $fileInputs = $('.fileInput');
      const $uploadIcons = $('.uploadIcon');
      const $generateButton = $('#generateButton');
      const $selectedFilesContainers = $('.selectedFilesContainer');

      $uploadIcons.on('click', function (e) {
        e.preventDefault();
        const $fileInput = $(this).siblings('.fileInput');
        $fileInput.click();
      });

      $fileInputs.on('change', function () {
        const $fileInput = $(this);
        const $selectedFilesContainer = $fileInput.siblings('.selectedFilesContainer');
        const fileCount = $fileInput[0].files.length;

        if (fileCount > 0) {
          let fileNames = '';

          for (let i = 0; i < fileCount; i++) {
            fileNames += $fileInput[0].files[i].name;
            if (i < fileCount - 1) {
              fileNames += ', ';
            }
          }

          $selectedFilesContainer.text(fileNames);
        } else {
          $selectedFilesContainer.text('');
        }
      });

      $generateButton.on('click', function () {
        // Create a new instance of JSZip
        const zip = new JSZip();

        // Use a Promise to read each file and add it to the zip
        const promises = $.map($fileInputs, function(fileInput) {
          return $.map(fileInput.files, function(file) {
            return new Promise(function(resolve, reject) {
              const reader = new FileReader();
              reader.onload = function () {
                zip.file(file.name, reader.result);
                resolve();
              };
              reader.onerror = function (error) {
                reject(error);
              };
              reader.readAsArrayBuffer(file);
            });
          });
        });

        // Wait for all file reading operations to complete
        Promise.all(promises)
          .then(function () {
            // Generate the zip file asynchronously
            return zip.generateAsync({ type: 'blob' });
          })
          .then(function (content) {
            // Once the zip is generated, create a download link and trigger the download
            const downloadLink = document.createElement('a');
            downloadLink.href = URL.createObjectURL(content);
            downloadLink.download = 'files.zip';
            downloadLink.click();
          })
          .catch(function (error) {
            console.error('Error generating the zip file:', error);
          });
      });
    });
  </script>
  <style>
    .uploadIcon {
      cursor: pointer;
      border: 1px solid black;
      padding: 5px;
      border-radius: 5px;
    }
    .selectedFilesContainer {
      margin-top: 10px;
      font-weight: bold;
    }
  </style>
</head>
<body>
  <h1>Multiple File Input with JSZip</h1>
  <div>
    <div class="input-group">
      <label class="input-group-text">
        <i class="fas fa-upload uploadIcon"></i>
        <span class="selectedFilesContainer"></span>
        <input type="file" class="fileInput form-control" multiple style="display: none;">
      </label>
    </div>
  </div>
  <div>
    <div class="input-group">
      <label class="input-group-text">
        <i class="fas fa-upload uploadIcon"></i>
        <span class="selectedFilesContainer"></span>
        <input type="file" class="fileInput form-control" multiple style="display: none;">
      </label>
    </div>
  </div>
  <div>
    <div class="input-group">
      <label class="input-group-text">
        <i class="fas fa-upload uploadIcon"></i>
        <span class="selectedFilesContainer"></span>
        <input type="file" class="fileInput form-control" multiple style="display: none;">
      </label>
    </div>
  </div>
  <button id="generateButton" class="btn btn-primary">Generate Zip</button>
</body>
</html>
